plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.luxpmsoft.luxaipoc"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 16
        versionName "1.8"
        resConfigs "en", "ko"
//        resConfigs "en"
//        ndk {
//            abiFilters 'armeabi-v7a'
//        }
        // Enabling multidex support.
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        dexOptions {
            javaMaxHeapSize "4g" //specify the heap size for the dex process
        }
    }

    signingConfigs {
        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            storeFile file(properties.getProperty("storeFile"))
            keyAlias properties.getProperty("keyAlias")
            storePassword properties.getProperty("storePassword")
            keyPassword properties.getProperty("keyPassword")
        }

        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            storeFile file(properties.getProperty("storeFile"))
            keyAlias properties.getProperty("keyAlias")
            storePassword properties.getProperty("storePassword")
            keyPassword properties.getProperty("keyPassword")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "String", "URL", '"https://dev-openairapi.luxpmsoft.com"'
            buildConfigField "String", "URL_OA3D", '"https://dev-openairapi.luxpmsoft.com/api/v1/"'
            buildConfigField "String", "URL_IMAGE", '"https://openair3d-dev.s3.us-east-2.amazonaws.com/"'
            buildConfigField "String", "URL_DEFECT", '"https://dev-defectapi.luxpmsoft.com/"'
            buildConfigField "String", "URL_WORKOUT", '"https://healthcareapi.luxpmsoft.com/api/v1/"'
            buildConfigField "String", "URL_WORKOUT_VIDEO", '"https://healthcareai-live.s3.us-east-2.amazonaws.com/"'
            resValue "string", "APP_ID", "com.luxpmsoft.luxaipoc"
            resValue "string", "APP_NAME", "\"OpenAir3D\""
            debuggable = true
//            applicationIdSuffix ".dev"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "URL", '"https://prod-openairapi.luxpmsoft.com"'
            buildConfigField "String", "URL_OA3D", '"https://prod-openairapi.luxpmsoft.com/api/v1/"'
            buildConfigField "String", "URL_IMAGE", '"https://openair3d-prod.s3.us-east-2.amazonaws.com/"'
            buildConfigField "String", "URL_DEFECT", '"https://prod-defectapi.luxpmsoft.com/"'
            buildConfigField "String", "URL_WORKOUT", '"https://test-healthcareapi.luxpmsoft.com/api/v1/"'
            buildConfigField "String", "URL_WORKOUT_VIDEO", '"https://healthcareai-test.s3.us-east-2.amazonaws.com/"'
            resValue "string", "APP_ID", "\"com.luxpmsoft.luxaipoc\""
            resValue "string", "APP_NAME", "\"OpenAir3D\""
            debuggable = true
        }
    }

//    productFlavors {
//        flavorDimensions "version"
//        dev {
//            minSdkVersion 21
//            dimension "version"
//            buildConfigField "String", "URL_OA3D", '"https://dev-openairapi.luxpmsoft.com/api/v1/"'
//            applicationIdSuffix ".dev"
//            resValue "string", "APP_ID", "\"com.luxpmsoft.luxaipoc.dev\""
//            resValue "string", "APP_NAME", "\"OpenAir 3D dev\""
//        }
//
//        prod {
//            minSdkVersion 21
//            dimension "version"
//            buildConfigField "String", "URL_OA3D", '"https://prod-openairapi.luxpmsoft.com/api/v1/"'
//            resValue "string", "APP_ID", "\"com.luxpmsoft.luxaipoc\""
//            resValue "string", "APP_NAME", "\"OpenAir 3D\""
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb']
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    lintOptions {
        abortOnError false
    }
    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    buildFeatures {
        viewBinding = true
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'com.android.support:design:28.0.0'
    implementation 'de.javagl:obj:0.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.3'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.retrofit2:converter-gson:2.6.2"
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.1"
    implementation 'com.google.code.gson:gson:2.8.0'
//    implementation 'com.google.ar.sceneform:core:1.17.1'
    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'com.google.ar:core:1.29.0'
    implementation 'com.google.ar:core:1.33.0'
//WindowManager
    implementation 'androidx.window:window:1.0.0-alpha09'
    // CameraX core library
//    def camerax_version = '1.1.0-alpha07'
    implementation("androidx.camera:camera-core:1.1.0")
    implementation("androidx.camera:camera-camera2:1.1.0")
    // If you want to additionally use the CameraX VideoCapture library
    implementation("androidx.camera:camera-video:1.1.0")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:1.1.0")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:1.1.0")
    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:1.1.0"
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'org.jcodec:jcodec:0.2.5'
    implementation 'org.jcodec:jcodec-android:0.2.5'
    implementation 'com.github.tapadoo:alerter:7.2.4'
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.facebook.android:facebook-login:latest.release'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.airbnb.android:lottie:3.7.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
//    implementation 'io.github.sceneview:arsceneview:0.9.0'
    implementation project(":sceneview")
    implementation project(":arsceneview")
    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    dependencies {
        implementation('io.socket:socket.io-client:2.1.0') {
            exclude group: 'org.json', module: 'json'
        }
    }

    // Pager
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.0'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.ar.sceneform.plugin'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'